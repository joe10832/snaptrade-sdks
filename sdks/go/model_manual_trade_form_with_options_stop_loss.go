/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
)

// ManualTradeFormWithOptionsStopLoss struct for ManualTradeFormWithOptionsStopLoss
type ManualTradeFormWithOptionsStopLoss struct {
	StopPrice *string `json:"stop_price,omitempty"`
	LimitPrice NullableString `json:"limit_price,omitempty"`
}

// NewManualTradeFormWithOptionsStopLoss instantiates a new ManualTradeFormWithOptionsStopLoss object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManualTradeFormWithOptionsStopLoss() *ManualTradeFormWithOptionsStopLoss {
	this := ManualTradeFormWithOptionsStopLoss{}
	return &this
}

// NewManualTradeFormWithOptionsStopLossWithDefaults instantiates a new ManualTradeFormWithOptionsStopLoss object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManualTradeFormWithOptionsStopLossWithDefaults() *ManualTradeFormWithOptionsStopLoss {
	this := ManualTradeFormWithOptionsStopLoss{}
	return &this
}

// GetStopPrice returns the StopPrice field value if set, zero value otherwise.
func (o *ManualTradeFormWithOptionsStopLoss) GetStopPrice() string {
	if o == nil || isNil(o.StopPrice) {
		var ret string
		return ret
	}
	return *o.StopPrice
}

// GetStopPriceOk returns a tuple with the StopPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualTradeFormWithOptionsStopLoss) GetStopPriceOk() (*string, bool) {
	if o == nil || isNil(o.StopPrice) {
    return nil, false
	}
	return o.StopPrice, true
}

// HasStopPrice returns a boolean if a field has been set.
func (o *ManualTradeFormWithOptionsStopLoss) HasStopPrice() bool {
	if o != nil && !isNil(o.StopPrice) {
		return true
	}

	return false
}

// SetStopPrice gets a reference to the given string and assigns it to the StopPrice field.
func (o *ManualTradeFormWithOptionsStopLoss) SetStopPrice(v string) {
	o.StopPrice = &v
}

// GetLimitPrice returns the LimitPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManualTradeFormWithOptionsStopLoss) GetLimitPrice() string {
	if o == nil || isNil(o.LimitPrice.Get()) {
		var ret string
		return ret
	}
	return *o.LimitPrice.Get()
}

// GetLimitPriceOk returns a tuple with the LimitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManualTradeFormWithOptionsStopLoss) GetLimitPriceOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.LimitPrice.Get(), o.LimitPrice.IsSet()
}

// HasLimitPrice returns a boolean if a field has been set.
func (o *ManualTradeFormWithOptionsStopLoss) HasLimitPrice() bool {
	if o != nil && o.LimitPrice.IsSet() {
		return true
	}

	return false
}

// SetLimitPrice gets a reference to the given NullableString and assigns it to the LimitPrice field.
func (o *ManualTradeFormWithOptionsStopLoss) SetLimitPrice(v string) {
	o.LimitPrice.Set(&v)
}
// SetLimitPriceNil sets the value for LimitPrice to be an explicit nil
func (o *ManualTradeFormWithOptionsStopLoss) SetLimitPriceNil() {
	o.LimitPrice.Set(nil)
}

// UnsetLimitPrice ensures that no value is present for LimitPrice, not even an explicit nil
func (o *ManualTradeFormWithOptionsStopLoss) UnsetLimitPrice() {
	o.LimitPrice.Unset()
}

func (o ManualTradeFormWithOptionsStopLoss) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StopPrice) {
		toSerialize["stop_price"] = o.StopPrice
	}
	if o.LimitPrice.IsSet() {
		toSerialize["limit_price"] = o.LimitPrice.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableManualTradeFormWithOptionsStopLoss struct {
	value *ManualTradeFormWithOptionsStopLoss
	isSet bool
}

func (v NullableManualTradeFormWithOptionsStopLoss) Get() *ManualTradeFormWithOptionsStopLoss {
	return v.value
}

func (v *NullableManualTradeFormWithOptionsStopLoss) Set(val *ManualTradeFormWithOptionsStopLoss) {
	v.value = val
	v.isSet = true
}

func (v NullableManualTradeFormWithOptionsStopLoss) IsSet() bool {
	return v.isSet
}

func (v *NullableManualTradeFormWithOptionsStopLoss) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManualTradeFormWithOptionsStopLoss(val *ManualTradeFormWithOptionsStopLoss) *NullableManualTradeFormWithOptionsStopLoss {
	return &NullableManualTradeFormWithOptionsStopLoss{value: val, isSet: true}
}

func (v NullableManualTradeFormWithOptionsStopLoss) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManualTradeFormWithOptionsStopLoss) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


